// <auto-generated/>
using GitHubTodoDemo.MicrosoftGraph.Me.Todo.Lists.Item.Tasks;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace GitHubTodoDemo.MicrosoftGraph.Me.Todo.Lists.Item {
    /// <summary>
    /// Builds and executes requests for operations under \me\todo\lists\{todoTaskList-id}
    /// </summary>
    public class TodoTaskListItemRequestBuilder : BaseRequestBuilder {
        /// <summary>Provides operations to manage the tasks property of the microsoft.graph.todoTaskList entity.</summary>
        public TasksRequestBuilder Tasks { get =>
            new TasksRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new TodoTaskListItemRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public TodoTaskListItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/me/todo/lists/{todoTaskList%2Did}", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new TodoTaskListItemRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public TodoTaskListItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/me/todo/lists/{todoTaskList%2Did}", rawUrl) {
        }
    }
}
