/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createPullRequestSimpleFromDiscriminatorValue, createValidationErrorFromDiscriminatorValue, type PullRequestSimple, type ValidationError } from '../../../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetDirectionQueryParameterType = (typeof GetDirectionQueryParameterTypeObject)[keyof typeof GetDirectionQueryParameterTypeObject];
export type GetSortQueryParameterType = (typeof GetSortQueryParameterTypeObject)[keyof typeof GetSortQueryParameterTypeObject];
export type GetStateQueryParameterType = (typeof GetStateQueryParameterTypeObject)[keyof typeof GetStateQueryParameterTypeObject];
/**
 * Builds and executes requests for operations under /repos/{owner}/{repo}/pulls
 */
export interface PullsRequestBuilder extends BaseRequestBuilder<PullsRequestBuilder> {
    /**
     * Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PullRequestSimple[]>}
     * @throws {ValidationError} error when the service returns a 422 status code
     * @see {@link https://docs.github.com/rest/reference/pulls#list-pull-requests|API method documentation}
     */
     get(requestConfiguration?: RequestConfiguration<PullsRequestBuilderGetQueryParameters> | undefined) : Promise<PullRequestSimple[] | undefined>;
    /**
     * Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<PullsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
 */
export interface PullsRequestBuilderGetQueryParameters {
    /**
     * Filter pulls by base branch name. Example: `gh-pages`.
     */
    base?: string;
    /**
     * The direction of the sort. Default: `desc` when sort is `created` or sort is not specified, otherwise `asc`.
     */
    direction?: GetDirectionQueryParameterType;
    /**
     * Filter pulls by head user or head organization and branch name in the format of `user:ref-name` or `organization:ref-name`. For example: `github:new-script-format` or `octocat:test-branch`.
     */
    head?: string;
    /**
     * Page number of the results to fetch.
     */
    page?: number;
    /**
     * The number of results per page (max 100).
     */
    perPage?: number;
    /**
     * What to sort results by. `popularity` will sort by the number of comments. `long-running` will sort by date created and will limit the results to pull requests that have been open for more than a month and have had activity within the past month.
     */
    sort?: GetSortQueryParameterType;
    /**
     * Either `open`, `closed`, or `all` to filter by state.
     */
    state?: GetStateQueryParameterType;
}
/**
 * Uri template for the request builder.
 */
export const PullsRequestBuilderUriTemplate = "{+baseurl}/repos/{owner}/{repo}/pulls{?base*,direction*,head*,page*,per_page*,sort*,state*}";
export const GetDirectionQueryParameterTypeObject = {
    Asc: "asc",
    Desc: "desc",
} as const;
export const GetSortQueryParameterTypeObject = {
    Created: "created",
    Updated: "updated",
    Popularity: "popularity",
    LongRunning: "long-running",
} as const;
export const GetStateQueryParameterTypeObject = {
    Open: "open",
    Closed: "closed",
    All: "all",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const PullsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "perPage": "per_page",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const PullsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: PullsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            422: createValidationErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendCollection",
        responseBodyFactory:  createPullRequestSimpleFromDiscriminatorValue,
        queryParametersMapper: PullsRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
